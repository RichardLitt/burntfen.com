I"±2
<p>Running <a href="https://gohugo.io/">Hugo</a> on <a href="https://www.netlify.com/">Netlify</a> is satisfyingly great. You can get a static website running with almost no operating costs (unless youâ€™re at major scale), and youâ€™re also able to quickly deploy by pushing to GitHub, as well as getting SSL through LetsEncrypt automatically at the push of a button. All told, you can have a website up and running in around 30 minutes from domain purchase. Itâ€™s fast.</p>

<p>I have <a href="https://58liters.com">58Liters</a> and <a href="https://maintainer.io">Maintainer Mountaineer</a> all running on Netlify, using Hugo. (I have half a dozen sites on Netlify using Jekyll, too.)</p>

<p>But, there are a few hitches. Without going into huge detail, here is the standard way of getting something up and running. Since Iâ€™ll be going through this, Iâ€™ll use a site Iâ€™ve been meaning to build - interruptedfern.com. I already have the domain pointed to Netlify, with these settings:</p>

<p><img src="/assets/img/interrupted-fern-settings.png" alt="" /></p>

<p>Now, the steps to follow:</p>

<ol>
  <li>Install Hugo: <code class="language-plaintext highlighter-rouge">brew update &amp;&amp; brew install hugo</code>.</li>
  <li>Go to your development directory: <code class="language-plaintext highlighter-rouge">cd ~/src</code>.</li>
  <li>Initiate a new site: <code class="language-plaintext highlighter-rouge">hugo new site interrupted-fern</code>.</li>
</ol>

<p>At this point, you need to install a theme. Iâ€™m going to install the <a href="https://themes.gohugo.io/hugo-tranquilpeak-theme/">Hugo Tranquil Peak</a> theme.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd themes
git clone https://github.com/kakawait/hugo-tranquilpeak-theme.git
</code></pre></div></div>

<h3 id="moving-the-configtoml">Moving the config.toml</h3>

<p>Now, you have a theme installed. What you need to do is copy the <code class="language-plaintext highlighter-rouge">config.toml</code> from the <code class="language-plaintext highlighter-rouge">exampleSite</code> folder to your base folder. This is a bit strange - but itâ€™s generally the easiest way Iâ€™ve seen to ensure that your config has all of the settings needed for the installed theme to work. This means that each time you change a theme, you need to change all of the metadata in the config, too. Keep that in mind - itâ€™s hard to change themes.</p>

<p>Once youâ€™ve copied it, go back to your directory - in my case, <code class="language-plaintext highlighter-rouge">~/src/interrupted-fern/</code>, and edit the <code class="language-plaintext highlighter-rouge">config.toml</code> there to match what you want.</p>

<h3 id="adding-empty-folders-to-git">Adding empty folders to git</h3>

<p>Now, you should add this stuff to GitHub. (I use <a href="http://github.com/github/hub"><code class="language-plaintext highlighter-rouge">hub</code></a> and <a href="https://github.com/tj/git-extras"><code class="language-plaintext highlighter-rouge">git-extras</code></a>, if any of these commands look weird).</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~/src/interrupted-fern $ git create
~/src/interrupted-fern $ git ls
archetypes  config.toml content     data        layouts     static      themes
~/src/interrupted-fern $ git add -A
~/src/interrupted-fern $ git status
On branch master

Initial commit

Changes to be committed:
  (use "git rm --cached &lt;file&gt;..." to unstage)

	new file:   config.toml
	new file:   themes/hugo-tranquilpeak-theme
~/src/interruped-fern $ git commit -m 'Lets go, hugo!'
~/src/interruped-fern $ git up
</code></pre></div></div>

<p>If youâ€™re all set up on Netlify, this should build.</p>

<p>Wait, so why werenâ€™t the other folders - archetypes, content, data, layouts, static - added? Well, theyâ€™re empty. Hugo likes empty folders. Git doesnâ€™t. If you want to keep them, youâ€™ll need to add a file into each of them. To do this, you can use a convention of having an empty file called <code class="language-plaintext highlighter-rouge">.gitkeep</code>.</p>

<p>Why is this important? Because <strong>Netlify needs those folders</strong>. Letâ€™s look at the build on Netlify, which has since failed:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>6:39:12 PM: Build started
6:39:12 PM: Fetching cached dependencies
6:39:13 PM: Starting to download cache of 27.6MB
6:39:13 PM: Preparing Git Reference refs/heads/master
6:39:14 PM: Warning during submodule checkout: No submodule mapping found in .gitmodules for path 'themes/hugo-tranquilpeak-theme'
6:39:15 PM: Building site
6:39:15 PM: Running build command
6:39:18 PM: Downloading and installing node v6.10.2...
6:39:18 PM: Downloading https://nodejs.org/dist/v6.10.2/node-v6.10.2-linux-x64.tar.xz...
6:39:18 PM:
6:39:18 PM: 0.0%
6:39:18 PM: 1.1%
6:39:18 PM: ### 4.7%
6:39:19 PM: ######### 13.3%
6:39:19 PM: ######################### 35.5%
6:39:19 PM: ################################################# 68.9%
6:39:19 PM: ##################################################################
6:39:19 PM: 92.4%
6:39:19 PM: ######################################################################## 100.0%
6:39:19 PM: 
6:39:19 PM: Computing checksum with sha256sum
6:39:19 PM: Checksums matched!
6:39:21 PM: Now using node v6.10.2 (npm v3.10.10)
6:39:21 PM: Using version v6.10.2 of node
6:39:21 PM: Using /opt/buildhome/.rvm/gems/ruby-2.1.2
6:39:21 PM: Started building sites ...
6:39:21 PM: Error: Error building site: No source directory found, expecting to find it at /opt/build/repo/content
6:39:22 PM: Cleaning up docker container
6:39:22 PM: Error running command: Build script returned non-zero exit code: 255
6:39:22 PM: Error running command: Build script returned non-zero exit code: 255
6:39:22 PM: Finished processing build request
</code></pre></div></div>

<p>Notice the fifth line from the bottom. It needs <code class="language-plaintext highlighter-rouge">content</code> to exist. But you donâ€™t have any content for this theme. It doesnâ€™t matter. Add <code class="language-plaintext highlighter-rouge">.gitkeep</code> to the folder.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">touch </span>archetypes/.gitkeep
<span class="nb">touch </span>content/.gitkeep
<span class="nb">touch </span>layouts/.gitkeep
<span class="nb">touch </span>static/.gitkeep
<span class="nb">touch </span>data/.gitkeep
git ca <span class="nt">-m</span> <span class="s1">'Adding folders'</span>
git up
</code></pre></div></div>

<p>At this point, it should build. Maybe.</p>

<h3 id="git-submodules">Git submodules</h3>

<p>Gitmodules are fun and powerful, but they are also confusing to set up and run with. Itâ€™s possible, at this point, that you failed to add the theme as a Git module. (Iâ€™ve been following these steps as I go, and that was my issue). You can see this in the build log:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>6:52:51 PM: Warning during submodule checkout: No submodule mapping found in .gitmodules for path 'themes/hugo-tranquilpeak-theme'
...
6:52:56 PM: Started building sites ...
6:52:57 PM: =============================================================
Your rendered home page is blank: /index.html is zero-length
* Did you specify a theme on the command-line or in your
"config.toml" file? (Current theme: "hugo-tranquilpeak-theme")
* For more debugging information, run "hugo -v"
=============================================================
</code></pre></div></div>

<p>You can check this by running <code class="language-plaintext highlighter-rouge">cat .git/config</code> or <code class="language-plaintext highlighter-rouge">cat .gitmodules</code>: if the first doesnâ€™t have a <code class="language-plaintext highlighter-rouge">[submodule *]</code> listing and if the second doesnâ€™t exist, you havenâ€™t added it. You could do this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rm -rf themes
git submodule add https://github.com/kakawait/hugo-tranquilpeak-theme.git themes/hugo-tranquilpeak-theme
</code></pre></div></div>

<p>But thatâ€™s a bit silly, because you donâ€™t need to clone the repository down again, which this would do (hence why you need to remove <code class="language-plaintext highlighter-rouge">themes</code> - otherwise, itâ€™ll say it already exists in the index).</p>

<p>Instead, <code class="language-plaintext highlighter-rouge">touch .gitmodules</code>, and add this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[submodule "themes/hugo-tranquilpeak-theme"]
  path = themes/hugo-tranquilpeak-theme
  url = https://github.com/kakawait/hugo-tranquilpeak-theme.git
</code></pre></div></div>

<p>Why not in <code class="language-plaintext highlighter-rouge">.git/config</code>? Because you canâ€™t add that to GitHub, which means Netlify wonâ€™t see it.</p>

<h3 id="editing-your-theme">Editing your theme</h3>

<p>What if you want to edit your theme?</p>

<p>Well, as far as I can tell, you canâ€™t. Hugo demands that you clone from someone elseâ€™s theme. If you want to edit it, you can add templates into <code class="language-plaintext highlighter-rouge">layouts</code> and css into <code class="language-plaintext highlighter-rouge">static</code>, according to <a href="https://gohugo.io/templates/list/">Hugoâ€™s weird rendering hierarchy</a>, which is difficult to navigate and debug.</p>

<p>But thereâ€™s another option. You can fork the theme, and push commits in it to your own fork, and use that as your theme.</p>

<p>Letâ€™s try that. Fork hugo-tranquilpeak-theme, add some commits, and then commit from inside the <code class="language-plaintext highlighter-rouge">themes/hugo-tranquilpeak-theme</code> folder. Then, letâ€™s change the submodule:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[submodule "themes/hugo-tranquilpeak-theme"]
  path = themes/hugo-tranquilpeak-theme
  url = https://github.com/RichardLitt/hugo-tranquilpeak-theme.git
</code></pre></div></div>

<p>Note: If you try to add the submodule using <code class="language-plaintext highlighter-rouge">git submodule add</code>, youâ€™ll need to delete the theme from <code class="language-plaintext highlighter-rouge">themes</code> <em>and</em> push. Otherwise, itâ€™ll think itâ€™s still in the index.</p>

<h3 id="knowing-which-version-of-hugo-youre-running">Knowing which version of Hugo youâ€™re running</h3>

<p>Make sure youâ€™re using the correct version of hugo.  By default, Netlify is currently running hugo <code class="language-plaintext highlighter-rouge">v0.17</code> but other versions are available: as for instance â€˜hugo_0.20â€™.</p>

<p>How would you know what version they are running? Their logs currently donâ€™t tell you. The best thing to do, in this case, is to add your own logging information. I did this by making my own Makefile, and then having Netlify build that instead of building hugo directly:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>all:
	hugo version
	hugo -v
</code></pre></div></div>

<p>This way, it will print the current version before it runs Hugo, so you know which version it is running</p>

<p>How do you change the version? There are <a href="https://www.netlify.com/blog/2017/04/11/netlify-plus-hugo-0.20-and-beyond/">two ways</a>. You can set <code class="language-plaintext highlighter-rouge">HUGO_VERSION</code> as an environmental variable in Netlify, or you can upload a <code class="language-plaintext highlighter-rouge">netlify.toml</code> file:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[context.deploy-preview.environment]
  HUGO_VERSION = "0.20"
</code></pre></div></div>

<p>That should do it for you.</p>

<h3 id="ensuring-https">Ensuring HTTPS</h3>

<p>I had an issue at this point where the CSS files werenâ€™t being loaded. I had set the <code class="language-plaintext highlighter-rouge">baseurl</code> in my <code class="language-plaintext highlighter-rouge">config.toml</code> to <code class="language-plaintext highlighter-rouge">https://interruptedfern.com</code>, instead of to <code class="language-plaintext highlighter-rouge">http</code>. But SSL wasnâ€™t being enforced, so the site wasnâ€™t loading the CSS. A quick switch on Netlify to enable SSL fixed this.</p>

<h3 id="all-done">All done</h3>

<p>At this point, the site is up and running. You can edit your own theme, you have Hugo compiling well, and youâ€™ve got SSL enabled.</p>

<p>Worth the effort.</p>
:ET